import { Telegraf } from "telegraf";
import { currentJarsCommand } from "./lib/commands";
import { Command } from "./lib/commands/types";
import { onCurrentJars, onEarn, onSpend } from "./lib/handlers";
import {
  getJars,
  getMovements,
  storeEarning,
  storeExpense,
} from "./lib/storage";

function handleCommand(command: Command) {
  switch (command.name) {
    case "spend":
      return onSpend(storeExpense, command);
    case "earn":
      return onEarn(storeEarning, command);
    case "jars":
      return onCurrentJars(getJars, getMovements, command);
  }
}

// async function main() {
//   // commands will be generated by parsing
//   // telegram messages
//   try {
//     // await handleCommand(spendCommand(12, "NEC"));
//     // await handleCommand(earnCommand(1000));
//     console.log(await handleCommand(currentJarsCommand()));
//   } catch (err) {
//     return Promise.reject(err);
//   }
// }

// main().catch(console.error.bind(console));

const token = process.env.TELEGRAM_TOKEN;

if (!token) throw new Error("TELEGRAM_TOKEN must be provided");

const bot = new Telegraf(token, { telegram: { webhookReply: true } });

bot.start((ctx) => ctx.reply("hello"));
bot.command("jars", async (ctx) => {
  return ctx.reply(await handleCommand(currentJarsCommand()));
});

export { bot };
